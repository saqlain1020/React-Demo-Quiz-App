{"version":3,"sources":["Util/firebase.js","Components/Login/Login.js","Components/Quiz/Quiz.js","Components/QuizResult/QuizResult.js","Components/QuizTable/QuizTable.js","Components/Dashboard/Dashboard.js","Components/Navbar/Navbar.js","Components/SignUp/SignUp.js","Components/QuizCreate/QuizCreate.js","Components/CoursesTable/CoursesTable.js","Components/Courses/Courses.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","Login","state","username","password","changeInput","e","name","target","value","setState","submit","a","preventDefault","signInWithEmailAndPassword","props","history","push","swal","message","this","classes","textField","heading","button","form","container","containerWrapper","className","onChange","onSubmit","TextField","defaultValue","type","id","label","Button","variant","color","Component","withStyles","theme","display","margin","background","backgroundColor","marginTop","fontFamily","fontWeight","fontSize","marginBottom","justifyContent","alignItems","flexFlow","height","width","padding","borderRadius","Quiz","user","questionNo","buttonText","ch1","ch2","ch3","ch4","correctQs","checkedAns","quiz","title","questions","componentDidUpdate","preProp","collection","where","uid","get","forEach","doc","data","componentDidMount","rand","Math","random","toFixed","quizId","match","params","quizid","query","seconds","noOfQ","timerDiv","document","querySelector","done","setInterval","innerHTML","percent","quizes","score","docId","set","goBack","next","Number","correctOp","showResult","userQuiz","console","log","checked","titleBar","timer","question","answers","FormControlLabel","control","Checkbox","op1","op2","op3","style","onClick","gridTemplateColumns","gridArea","border","useStyle","makeStyles","root","borderTop","para","withRouter","marginRight","StyledTableCell","head","palette","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","CustomizedTables","quizResult","rows","createRows","map","item","subject","noofqs","onclick","quizClick","row","key","uuid","render","TableContainer","component","Paper","Table","table","aria-label","TableHead","align","TableBody","scope","React","breakpoints","down","Dashboard","quizOpen","courseName","obj","currentUser","Container","QuizTable","useStyles","flexGrow","menuButton","spacing","Navbar","AppBar","position","Toolbar","IconButton","edge","to","Typography","turnFalse","signOut","SignUp","createUserWithEmailAndPassword","userObj","courses","add","placeholder","QuizCreate","currentQ","changeInputState","mainHeading","textArea","content","num","isNaN","Swal","fire","input","inputOptions","Object","assign","subId","createdBy","outline","overflow","buttonJoined","textDecoration","ItemJoined","ItemRecommended","fetchCourses","CoursesTable","joinedCourses","recommendedCourses","Courses","preState","getUserCourses","filter","some","element","error","App","login","signUp","quizCreate","turnTrue","fetchUser","onAuthStateChanged","currentPath","location","pathname","substring","gridTemplateRows","minHeight","changeState","path","exact","dashboard","ReactDOM","StrictMode","basename","window","getElementById"],"mappings":"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","file":"static/js/main.2b9b5f2c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyA3OgXcuO8xj5GDwHJRgYRg4tuBtBq2q0g\",\r\n  authDomain: \"react-quiz-app-a5116.firebaseapp.com\",\r\n  databaseURL: \"https://react-quiz-app-a5116.firebaseio.com\",\r\n  projectId: \"react-quiz-app-a5116\",\r\n  storageBucket: \"react-quiz-app-a5116.appspot.com\",\r\n  messagingSenderId: \"175000509759\",\r\n  appId: \"1:175000509759:web:21e43ee4d93ff249dfc78a\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n\r\nexport var db = firebase.firestore();\r\nexport var auth = firebase.auth();\r\n","import React, { Component } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport {  withStyles } from \"@material-ui/core/styles\";\r\nimport \"../fonts.css\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport firebase from '../../Util/firebase'\r\n\r\nconst useStyles = (theme) => ({\r\n  textField: {\r\n    display: \"block\",\r\n    margin: 10,\r\n  },\r\n  button: {\r\n    background: \"#6c5ce7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#222\",\r\n    },\r\n    marginTop: 10,\r\n  },\r\n  heading: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"900\",\r\n    fontSize: 40,\r\n    marginBottom: 20 \r\n  },\r\n  containerWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n    background: \"linear-gradient(0deg, #2d3436,#0984e3);\",\r\n    height: \"calc(100vh - 64px)\",\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n    background: \"white\",\r\n    padding: 30,\r\n    borderRadius: 10,\r\n    height: \"350px\"\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n  },\r\n});\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  changeInput = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {username,password} = this.state;\r\n    try {\r\n      await firebase.auth().signInWithEmailAndPassword(username,password);  \r\n      this.props.history.push(\"/Dashboard\");\r\n    } catch (error) {\r\n      swal(null,error.message,\"error\");\r\n    }\r\n\r\n    // let users = JSON.parse(localStorage.getItem(\"users\"));\r\n    // let flag = true;\r\n    // users?users.forEach((element) => {\r\n    //   if (\r\n    //     element.username === this.state.username &&\r\n    //     element.password === this.state.password\r\n    //   ) {\r\n    //     this.props.changeState(element.username);\r\n    //     flag = false;\r\n    //     this.props.history.push(\"/Dashboard\");\r\n    //   }\r\n    // }):swal(\"Wrong Credentials\",\"\",\"error\");\r\n    // if (flag) swal(\"Wrong Credentials\",\"\",\"error\");\r\n  };\r\n  render() {\r\n    const {\r\n      textField,\r\n      heading,\r\n      button,\r\n      form,\r\n      container,\r\n      containerWrapper,\r\n    } = this.props.classes;\r\n    return (\r\n      <div className={containerWrapper}>\r\n        <div className={container}>\r\n          <h1 className={heading}>Login</h1>\r\n          <form\r\n            className={form}\r\n            onChange={this.changeInput}\r\n            onSubmit={this.submit}\r\n          >\r\n            <TextField\r\n              name=\"username\"\r\n              defaultValue={this.state.username}\r\n              type=\"text\"\r\n              id=\"standard-basic\"\r\n              label=\"Username\"\r\n              className={textField}\r\n            />\r\n            <TextField\r\n              type=\"password\"\r\n              name=\"password\"\r\n              defaultValue={this.state.password}\r\n              id=\"standard-basic\"\r\n              label=\"Password\"\r\n              className={textField}\r\n            />\r\n            <Button\r\n              className={button}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Login);\r\n","import React, { Component } from \"react\";\r\nimport \"../fonts.css\";\r\nimport { withStyles, Button } from \"@material-ui/core/\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport firebase,{ db, auth } from \"../../Util/firebase\";\r\n\r\nconst styles = () => ({\r\n  containerWrapper: {\r\n    display: \"grid\",\r\n    gridTemplateColumns:\r\n      \"minmax(10px,1fr) minmax(min-content,1100px) minmax(10px,1fr)\",\r\n  },\r\n  container: {\r\n    gridArea: \"1/2\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 35,\r\n    fontWeight: 900,\r\n    margin: 10,\r\n    color: \"#222\",\r\n  },\r\n  titleBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    background: \"#2c3e50\",\r\n    justifyContent: \"space-between\",\r\n    height: \"35px\",\r\n    paddingLeft: \"20px\",\r\n    paddingRight: \"20px\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  question: {\r\n    color: \"white\",\r\n    background: \"#0984e3\",\r\n    padding: 5,\r\n    width: \"100%\",\r\n    marginTop: \"10px\",\r\n    border: \"2px solid #0984e3\",\r\n  },\r\n  answers: {\r\n    border: \"2px solid #0984e3\",\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    width: \"100%\",\r\n    padding: 5,\r\n  },\r\n});\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    user: null,\r\n    questionNo: 1,\r\n    buttonText: \"Next\",\r\n    ch1: false,\r\n    ch2: false,\r\n    ch3: false,\r\n    ch4: false,\r\n    correctQs: 0,\r\n    checkedAns: \"\",\r\n    quiz: {\r\n      title: \"\",\r\n      questions: [\"\"],\r\n\r\n    },\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state.quizid = this.props.match.params.quizid\r\n    // let quizes = JSON.parse(localStorage.getItem(\"quizes\"));\r\n    // for (let i = 0; i < quizes.length; i++) {\r\n    //   if (quizes[i].id === this.state.quizid) {\r\n    //     this.state.quiz = quizes[i];\r\n    //     break;\r\n    //   }\r\n    // }\r\n    // this.rand = (Math.random() * 3).toFixed(); // 0,1,2,3\r\n    // this.seconds = this.state.quiz.noOfQ * 30;\r\n    // this.done = false;\r\n  }\r\n  componentDidUpdate=async(preProp)=>{\r\n    if(!this.state.user){\r\n      let user,query;\r\n      query = await db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", this.props.uid)\r\n      .get();\r\n    query.forEach((doc) => {\r\n      user = doc.data();\r\n    });\r\n    this.setState({\r\n      user,\r\n    })\r\n    }\r\n  }\r\n  componentDidMount = async () => {\r\n    this.rand = (Math.random() * 3).toFixed(); // 0,1,2,3\r\n    \r\n    const quizId = this.props.match.params.quizid;\r\n    \r\n    let query = await db.collection(\"quizes\").doc(quizId).get();\r\n    let quiz = query.data();\r\n    quiz.id = query.id;\r\n    \r\n    this.setState({\r\n      quiz,\r\n    });\r\n    this.seconds = this.state.quiz.noOfQ * 30;\r\n    if (this.state.questionNo === this.state.quiz.noOfQ - 1)\r\n      this.setState({\r\n        buttonText: \"Done\",\r\n      });\r\n\r\n    // //Timer\r\n    let timerDiv = document.querySelector(\"#timer\");\r\n\r\n    \r\n    this.done = false;\r\n\r\n    // if (localStorage.getItem(\"status\")) {\r\n    //   let status = JSON.parse(localStorage.getItem(\"status\"));\r\n    //   swal(\"Quiz Continuing\", \"\", \"info\");\r\n    //   this.state.quiz = status.quiz;\r\n    //   this.seconds = status.seconds;\r\n    //   this.setState({\r\n    //     questionNo: status.questionNo,\r\n    //     correctQs: status.correctQs,\r\n    //   });\r\n    // }\r\n    setInterval(async () => {\r\n      const { user } = this.state;\r\n      this.seconds--;\r\n      timerDiv.innerHTML = `Timer: ${this.seconds} Sec Left`;\r\n      //   let status = {\r\n      //     questionNo: this.state.questionNo,\r\n      //     correctQs: this.state.correctQs,\r\n      //     quiz: this.state.quiz,\r\n      //     seconds: this.seconds,\r\n      //   };\r\n      //   if(!this.done)\r\n      //     localStorage.setItem(\"status\", JSON.stringify(status));\r\n      if (this.seconds === 0) {\r\n        let percent =\r\n          ((this.state.correctQs / this.state.quiz.noOfQ) * 100).toFixed(2) +\r\n          \"%\";\r\n        swal(\"Result\", \"Correct Answers\" + percent, \"info\");\r\n\r\n        //     //Add quiz info to user\r\n        //     let users = JSON.parse(localStorage.getItem(\"users\"));\r\n        //     users = users.map((item) => {\r\n        //       if (item.username === this.props.username) {\r\n        user.quizes.push({\r\n          id: this.state.quiz.id,\r\n          score: percent,\r\n        });\r\n        await db.collection(\"users\").doc(user.docId).set(user);\r\n        //         item.quizes.push({\r\n        //           id: this.state.quiz.id,\r\n        //           score: percent,\r\n        //         });\r\n        //       }\r\n        //       return item;\r\n        //     });\r\n        //     localStorage.setItem(\"users\", JSON.stringify(users));\r\n        //     this.done = true;\r\n        //     localStorage.setItem(\"status\",\"\");\r\n        this.props.history.goBack();\r\n      }\r\n    }, 1000);\r\n  };\r\n  next = () => {\r\n    this.rand = (Math.random() * 3).toFixed(); // 0,1,2,3;\r\n    if (this.state.questionNo === Number(this.state.quiz.noOfQ) - 1)\r\n      this.setState({\r\n        buttonText: \"Done\",\r\n      });\r\n    if (\r\n      this.state.checkedAns ===\r\n      this.state.quiz.questions[this.state.questionNo - 1].correctOp\r\n    ) {\r\n      this.setState(\r\n        {\r\n          correctQs: Number(this.state.correctQs) + 1,\r\n        },\r\n        this.showResult\r\n      );\r\n    } else this.showResult();\r\n  };\r\n  showResult = async () => {\r\n    const { user } = this.state;\r\n    let userQuiz = user.quizes?user.quizes:[];\r\n    if (this.state.questionNo === this.state.quiz.noOfQ) {\r\n      let percent =\r\n        ((this.state.correctQs / this.state.quiz.noOfQ) * 100).toFixed(2) + \"%\";\r\n      swal(\"Result\", \"Correct Answers\" + percent, \"info\");\r\n      userQuiz.push({\r\n        id: this.state.quiz.id,\r\n        score: percent,\r\n      });\r\n      user.quizes = userQuiz\r\n      console.log(user);\r\n      await db.collection(\"users\").doc(user.docId).set(user);\r\n      this.props.history.goBack();\r\n    } else {\r\n      if (this.state.questionNo < this.state.quiz.noOfQ)\r\n        this.setState({\r\n          questionNo: Number(this.state.questionNo) + 1,\r\n          ch1: false,\r\n          ch2: false,\r\n          ch3: false,\r\n          ch4: false,\r\n        });\r\n      return;\r\n    }\r\n  };\r\n  checked = (e) => {\r\n    let target = e.target;\r\n    this.setState(\r\n      {\r\n        ch1: false,\r\n        ch2: false,\r\n        ch3: false,\r\n        ch4: false,\r\n      },\r\n      () => {\r\n        this.setState({\r\n          [target.name]: true,\r\n          checkedAns: target.value,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { questionNo, buttonText ,quiz} = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.containerWrapper}>\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>Title: {quiz.title}</h1>\r\n\r\n          <div className={classes.titleBar}>\r\n            <h2>\r\n              Question {questionNo}/{quiz.noOfQ}\r\n            </h2>\r\n            <h3 id=\"timer\" className={classes.timer}>\r\n              Timer: 120 Sec Left\r\n            </h3>\r\n          </div>\r\n\r\n          <h2 className={classes.question}>\r\n            {quiz.questions[questionNo - 1].question}\r\n          </h2>\r\n          {this.rand === \"0\" && (\r\n            <div className={classes.answers}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch1}\r\n                    onChange={this.checked}\r\n                    name=\"ch1\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op1}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op1}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch2}\r\n                    onChange={this.checked}\r\n                    name=\"ch2\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].correctOp}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].correctOp}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch3}\r\n                    onChange={this.checked}\r\n                    name=\"ch3\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op2}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op2}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch4}\r\n                    onChange={this.checked}\r\n                    name=\"ch4\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op3}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op3}\r\n              />\r\n            </div>\r\n          )}\r\n          {this.rand === \"1\" && (\r\n            <div className={classes.answers}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch1}\r\n                    onChange={this.checked}\r\n                    name=\"ch1\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].correctOp}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].correctOp}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch2}\r\n                    onChange={this.checked}\r\n                    name=\"ch2\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op1}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op1}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch3}\r\n                    onChange={this.checked}\r\n                    name=\"ch3\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op2}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op2}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch4}\r\n                    onChange={this.checked}\r\n                    name=\"ch4\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op3}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op3}\r\n              />\r\n            </div>\r\n          )}\r\n          {this.rand === \"2\" && (\r\n            <div className={classes.answers}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch1}\r\n                    onChange={this.checked}\r\n                    name=\"ch1\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op1}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op1}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch2}\r\n                    onChange={this.checked}\r\n                    name=\"ch2\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op2}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op2}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch3}\r\n                    onChange={this.checked}\r\n                    name=\"ch3\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].correctOp}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].correctOp}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch4}\r\n                    onChange={this.checked}\r\n                    name=\"ch4\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op3}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op3}\r\n              />\r\n            </div>\r\n          )}\r\n          {this.rand === \"3\" && (\r\n            <div className={classes.answers}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch1}\r\n                    onChange={this.checked}\r\n                    name=\"ch1\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op1}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op1}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch2}\r\n                    onChange={this.checked}\r\n                    name=\"ch2\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op2}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op2}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch3}\r\n                    onChange={this.checked}\r\n                    name=\"ch3\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].op3}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].op3}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.ch4}\r\n                    onChange={this.checked}\r\n                    name=\"ch4\"\r\n                    color=\"primary\"\r\n                    value={quiz.questions[questionNo - 1].correctOp}\r\n                  />\r\n                }\r\n                label={quiz.questions[questionNo - 1].correctOp}\r\n              />\r\n            </div>\r\n          )}\r\n          <Button\r\n            style={{ marginTop: 20 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.next}\r\n          >\r\n            {buttonText}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Quiz);\r\n","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 5,\r\n    borderTop: \"2px solid #222\",\r\n    height: \"250px\",\r\n    flexFlow: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"left\",\r\n    width: \"100%\",\r\n  },\r\n  para: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n  },\r\n}));\r\n\r\nconst QuizResult = (props) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={`${classes.root} flex`} >\r\n      <p className={classes.para}>\r\n        Quiz Title: {props.title}\r\n        <br />\r\n        Total Questions: {props.noOfQ}\r\n        <br />\r\n      </p>\r\n      <div>\r\n        {!props.score && (\r\n          <Button\r\n          style={{marginRight: 5}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              props.history.push(`/Quizes/${props.id}`);\r\n            }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        )}\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className=\"back\"\r\n          onClick={() => props.history.goBack()}\r\n        >\r\n          Back\r\n        </Button>\r\n      </div>\r\n\r\n      {props.score && <h1>Score: {props.score}</h1>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(QuizResult);\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport QuizResult from \"../QuizResult/QuizResult\";\r\nimport {v4 as uuid } from \"uuid\";\r\nimport {db,auth} from \"../../Util/firebase\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst styles =(theme)=>({\r\n  table: {\r\n    // minWidth: 700,\r\n  },\r\n  root:{\r\n    display: 'flex',\r\n    [theme.breakpoints.down('md')]: {\r\n      flexFlow: \"column\",\r\n    },\r\n  }\r\n});\r\n\r\nclass CustomizedTables extends React.Component{\r\n  state={\r\n    quizResult: \"\",\r\n    rows:[],\r\n    user:{},\r\n  }\r\n\r\n  \r\n  componentDidUpdate=(preProp)=>{\r\n    if(preProp!=this.props){\r\n      this.createRows();\r\n    }  \r\n  }\r\n\r\n  createRows = async () => {\r\n    const {quizes} = this.props;\r\n    let rows = quizes?quizes.map((item) => {\r\n      return {\r\n        title: item.title,\r\n        subject: item.subject,\r\n        noofqs: item.noOfQ,\r\n        id: item.id,\r\n        onclick: () => this.quizClick(item.id),\r\n      };\r\n    }):[];\r\n    // if (rows)\r\n    //   rows.sort((a, b) =>\r\n    //     a.subject > b.subject ? 1 : b.subject > a.subject ? -1 : 0\r\n    //   );\r\n    this.setState({\r\n      rows,\r\n    })\r\n  };\r\n  quizClick=(row)=>{\r\n    const {user} = this.props;\r\n    let flag , score;\r\n\r\n    user.quizes?user.quizes.forEach(item=>{\r\n      if(item.id === row.id){\r\n        flag = true;\r\n        score = item.score;\r\n      }\r\n    }):flag= false;\r\n\r\n\r\n    this.setState({\r\n      quizResult: <QuizResult key={uuid()} title={row.title} noOfQ={row.noofqs} score={score} id={row.id} />,\r\n    })\r\n  //       <QuizResult title={row.title} noOfQ={row.noofqs} score={score} id={row.id} />\r\n  //       if(flag){\r\n  // <QuizResult title={row.title} noOfQ={row.noofqs} score={score} id={row.id} />\r\n  //       }else{\r\n  //         <QuizResult title={row.title} noOfQ={row.noofqs} score={score} />\r\n  //         <Quiz username={this.props.username} close={() => {this.setState({ quizOpen: false });}} quiz={quiz}/>\r\n  //       }\r\n      \r\n\r\n\r\n    // console.log(row)\r\n    // let flag = false;\r\n    //   let score;\r\n    //   let users = JSON.parse(localStorage.getItem(\"users\"));\r\n    //   users.forEach((item) => {\r\n    //     if (item.username === this.props.username) {\r\n    //       item.quizes.forEach((element) => {\r\n    //         if (element.id === row.id) {\r\n    //           flag = true;\r\n    //           score = element.score;\r\n    //         }\r\n    //       });\r\n    //     }\r\n    //   });\r\n    //   this.setState({\r\n    //     quizResult: <QuizResult key={uuid()} title={row.title} noOfQ={row.noofqs} score={score} id={row.id} />,\r\n    //   })\r\n      // <QuizResult title={row.title} noOfQ={row.noofqs} score={score} id={row.id} />\r\n      // if(flag){\r\n// <QuizResult title={row.title} noOfQ={row.noofqs} score={score} id={row.id} />\r\n      // }else{\r\n        // <QuizResult title={row.title} noOfQ={row.noofqs} score={score} />\r\n        // <Quiz username={this.props.username} close={() => {this.setState({ quizOpen: false });}} quiz={quiz}/>\r\n      // }\r\n    \r\n  }\r\n\r\n  render=()=>{\r\n    const {classes} = this.props;\r\n    return (\r\n      <div className={classes.root} >\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>Title</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Subject</StyledTableCell>\r\n                <StyledTableCell align=\"right\">No of Qs</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.rows ? (\r\n                this.state.rows.map((row) => (\r\n                  <StyledTableRow key={uuid()} onClick={()=>{this.quizClick(row)}} key={row.title}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {row.title}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.subject}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.noofqs}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))\r\n              ) : (\r\n                <StyledTableCell align=\"right\">No Entries</StyledTableCell>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {this.state.quizResult}\r\n        {/* <QuizResult title noOfQ score continue /> */}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\nexport default withStyles(styles)(CustomizedTables);","import { Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Quiz from \"../Quiz/Quiz\";\r\nimport QuizTable from \"../QuizTable/QuizTable\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport { auth, db } from \"../../Util/firebase\";\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    quizOpen: false,\r\n    quiz: \"\",\r\n    quizes: [],\r\n    rows: [],\r\n    user:{},\r\n  };\r\n  // createRows = async () => {\r\n  //   const {quizes} = this.state;\r\n  //   let rows = quizes?quizes.map((item) => {\r\n  //     return {\r\n  //       title: item.title,\r\n  //       subject: item.subject,\r\n  //       noofqs: item.noOfQ,\r\n  //       id: item.id,\r\n  //       onclick: () => this.quizOpen(item.id),\r\n  //     };\r\n  //   }):[];\r\n  //   // if (rows)\r\n  //   //   rows.sort((a, b) =>\r\n  //   //     a.subject > b.subject ? 1 : b.subject > a.subject ? -1 : 0\r\n  //   //   );\r\n  //   this.setState({\r\n  //     rows,\r\n  //   })\r\n  // };\r\n  componentDidMount = async() => {\r\n    const courseName = this.props.match.params.courseName;\r\n    let quizes = [];\r\n    let query = await db\r\n      .collection(\"quizes\")\r\n      .where(\"subject\", \"==\", courseName)\r\n      .get();\r\n    query.forEach((doc) => {\r\n      let obj = doc.data();\r\n      obj.id = doc.id;\r\n      quizes.push(obj);\r\n    });\r\n\r\n    let user;\r\n    let userQuery = await db.collection(\"users\").where(\"uid\",\"==\",auth.currentUser.uid).get();\r\n    userQuery.forEach(doc=>{\r\n      user = doc.data();\r\n    })\r\n\r\n    this.setState({\r\n      quizes,\r\n      user,\r\n    })\r\n  };\r\n  //Create method that will return quiz using the quiz object passed to it from here dashboard using other funciton on clickon quizes buttpns\r\n  render = () => (\r\n    <div>\r\n      \r\n      {!this.state.quizOpen && (\r\n        <div>\r\n          <Container style={{ marginTop: 30 }}>\r\n            <QuizTable\r\n              quizes = {this.state.quizes}\r\n              username={this.props.username}\r\n              rows={this.state.rows}\r\n              user = {this.state.user}\r\n            />\r\n          </Container>\r\n        </div>\r\n      )}\r\n      {this.state.quizOpen && this.state.quiz}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\nimport {auth} from '../../Util/firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    marginRight: 10\r\n  },\r\n  button: {\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nexport default function Navbar(props) {\r\n  const classes = useStyles();\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <Link to={auth.currentUser?\"/Dashboard\":\"/Login\"}><HomeIcon/></Link>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} onClick={()=>{props.turnFalse(\"quizCreate\")}}>\r\n          Quiz Application\r\n          </Typography>\r\n          {!props.user && (\r\n          <div style={{ display: \"flex\", marginRight: \"10px\" }}>\r\n            <Link to=\"/Signup\"><Button color=\"inherit\">SignUP</Button></Link>\r\n            <Link to=\"/Login\"><Button color=\"inherit\">Login</Button></Link>\r\n          </div>\r\n        )}\r\n        {props.user && (\r\n          <div style={{ display: \"flex\", marginRight: \"10px\" }}>\r\n            <Typography variant=\"h6\" className={classes.title}>Welcome {props.username}</Typography>\r\n            <Link to=\"/Quizcreate\"><Button color=\"inherit\">Create Quiz</Button></Link>\r\n            <Link onClick={()=>{auth.signOut()}}><Button color=\"inherit\">Logout</Button></Link>\r\n          </div>\r\n        )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport \"../fonts.css\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport firebase from \"../../Util/firebase\";\r\n\r\n\r\nvar db = firebase.firestore();\r\n\r\nconst useStyles = (theme) => ({\r\n  textField: {\r\n    display: \"block\",\r\n    margin: 10,\r\n  },\r\n  button: {\r\n    background: \"#6c5ce7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#222\",\r\n    },\r\n    marginTop: 10,\r\n  },\r\n  heading: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"900\",\r\n    fontSize: 40,\r\n    marginBottom: 20,\r\n  },\r\n  containerWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n    background: \"linear-gradient(0deg, #2d3436,#0984e3);\",\r\n    height: \"calc(100vh - 64px)\",\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n    background: \"white\",\r\n    padding: 30,\r\n    borderRadius: 10,\r\n    height: \"350px\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n  },\r\n});\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  componentDidMount=()=>{\r\n    \r\n  }\r\n  changeInput = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  componentDidUpdate=()=>{\r\n    console.log(firebase.auth().currentUser);  \r\n  \r\n  }\r\n\r\n  submit = async (e) => {\r\n    e.preventDefault();\r\n    const {username,password} = this.state;\r\n    try {\r\n      const user = await firebase.auth().createUserWithEmailAndPassword(username,password);  \r\n      const userObj = {\r\n        uid: firebase.auth().currentUser.uid,\r\n        courses: []\r\n      }\r\n      await db.collection(\"users\").add(userObj);\r\n      this.props.history.push(\"/Dashboard\");\r\n    } catch (error) {\r\n      swal(null,error.message,\"error\");\r\n    }\r\n    \r\n\r\n    // let users = [];\r\n    // if (JSON.parse(localStorage.getItem(\"users\")))\r\n    //   users = JSON.parse(localStorage.getItem(\"users\"));\r\n    // users.forEach((element) => {\r\n    //   if (element.username === this.state.username) {\r\n    //     swal(\"User Exists\", \"\", \"info\");\r\n    //     return;\r\n    //   }\r\n    // });\r\n\r\n    // users.push({\r\n    //   username: this.state.username,\r\n    //   password: this.state.password,\r\n    //   quizes: [],\r\n    // });\r\n    // localStorage.setItem(\"users\", JSON.stringify(users));\r\n    // this.props.changeState(this.state.username);\r\n    // this.props.history.push(\"/Dashboard\");\r\n  };\r\n  render() {\r\n    const {\r\n      textField,\r\n      heading,\r\n      button,\r\n      form,\r\n      container,\r\n      containerWrapper,\r\n    } = this.props.classes;\r\n    return (\r\n      <div className={containerWrapper}>\r\n        <div className={container}>\r\n          <h1 className={heading}>SignUp</h1>\r\n          <form\r\n            className={form}\r\n            onChange={this.changeInput}\r\n            onSubmit={this.submit}\r\n          >\r\n            <TextField\r\n              name=\"username\"\r\n              defaultValue={this.state.username}\r\n              type=\"text\"\r\n              placeholder=\"UserName\"\r\n              className={textField}\r\n              label=\"Username\"\r\n            />\r\n            <TextField\r\n              className={textField}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              defaultValue={this.state.password}\r\n              label=\"Password\"\r\n            />\r\n            <Button\r\n              className={button}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport CustomFunctions from \"../CustomFunctions/CustomFunctions\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\r\n\r\nimport \"sweetalert2/src/sweetalert2.scss\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport \"../fonts.css\";\r\nimport firebase, { auth, db } from \"../../Util/firebase\";\r\n\r\nconst styles = (theme) => ({\r\n  textArea: {\r\n    outline: \"1px solid blue\",\r\n    margin: \"10px 0\",\r\n    height: \"45px\",\r\n    fontWeight: \"900\",\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"30px\",\r\n    color: \"#222\",\r\n  },\r\n  textField: {\r\n    marginBottom: 10,\r\n  },\r\n  mainHeading: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"900\",\r\n  },\r\n});\r\n\r\nclass QuizCreate extends Component {\r\n  state = {\r\n    noOfQ: 0,\r\n    title: \"\",\r\n    subject: \"\",\r\n    op1: \"\",\r\n    op2: \"\",\r\n    op3: \"\",\r\n    question: \"\",\r\n    questions: [],\r\n    correctOp: \"\",\r\n    currentQ: \"1\",\r\n    quiz: {},\r\n  };\r\n  async componentDidMount() {\r\n    let num = Number(\r\n      await swal(\"Enter Number Of Questions\", {\r\n        content: \"input\",\r\n      })\r\n    );\r\n\r\n    if (isNaN(num) || num < 1) this.componentDidMount();\r\n    else\r\n      this.setState(\r\n        {\r\n          noOfQ: num,\r\n        },\r\n        async () => {\r\n          let title = await swal(\"Enter Quiz Title\", {\r\n            content: \"input\",\r\n          });\r\n          this.setState(\r\n            {\r\n              title: title,\r\n            },\r\n            async () => {\r\n              let courses = [];\r\n              let query = await firebase\r\n                .firestore()\r\n                .collection(\"courses\")\r\n                .get();\r\n              query.forEach((doc) => {\r\n                courses.push(doc.data().courseName);\r\n              });\r\n              let subId = await Swal.fire({\r\n                title: \"Enter Course Name\",\r\n                input: \"select\",\r\n                inputOptions: Object.assign(\r\n                  ...courses.map((item) => ({ [item]: item }))\r\n                ),\r\n              });\r\n              this.setState(\r\n                {\r\n                  subject: subId.value,\r\n                },\r\n                () => {\r\n                  this.setState({\r\n                    quiz: {\r\n                      subject: this.state.subject,\r\n                      noOfQ: this.state.noOfQ,\r\n                      title: this.state.title,\r\n                      createdBy: auth.currentUser.uid,\r\n                    },\r\n                  });\r\n                }\r\n              );\r\n            }\r\n          );\r\n        }\r\n      );\r\n  }\r\n  changeInputState = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let question = {\r\n      question: this.state.question,\r\n      correctOp: this.state.correctOp,\r\n      op1: this.state.op1,\r\n      op2: this.state.op2,\r\n      op3: this.state.op3,\r\n    };\r\n    let questions = this.state.questions;\r\n    questions.push(question);\r\n    this.setState(\r\n      {\r\n        questions: questions,\r\n      },\r\n      () => {\r\n        this.setState({\r\n          currentQ: Number(this.state.currentQ) + 1,\r\n          op1: \"\",\r\n          op2: \"\",\r\n          op3: \"\",\r\n          question: \"\",\r\n          correctOp: \"\",\r\n        });\r\n      }\r\n    );\r\n    if (this.state.currentQ >= this.state.noOfQ) {\r\n      //End Quiz Create\r\n      let quiz = this.state.quiz;\r\n      quiz.questions = this.state.questions;\r\n      console.log(quiz)\r\n      await db.collection(\"quizes\").add(quiz);\r\n      this.props.history.push(\"/Dashboard\");\r\n      return;\r\n    }\r\n    // let quizes = [{\r\n    //   id,\r\n    //   subject,\r\n    //   noOfQ,\r\n    //   title,\r\n    //   questions: [{\r\n    //     question,\r\n    //     correctOp\r\n    //     op1\r\n    //     op2\r\n    //     op3\r\n    //   }]\r\n    // }];\r\n\r\n    // currentQ++\r\n  };\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container style={{ padding: \"0 50px\" }}>\r\n        <div id=\"quizCreate\" style={{ display: \"flex\", flexFlow: \"column\" }}>\r\n          <h1 className={classes.mainHeading}>Quiz: {this.state.title}</h1>\r\n          <form\r\n            onSubmit={this.submit}\r\n            style={{ display: \"flex\", flexFlow: \"column\" }}\r\n          >\r\n            <h2 className={classes.mainHeading}>\r\n              Question {this.state.currentQ}\r\n            </h2>\r\n            <textarea\r\n              className={classes.textArea}\r\n              value={this.state.question}\r\n              type=\"text\"\r\n              placeholder=\"Enter Question\"\r\n              name=\"question\"\r\n              onChange={this.changeInputState}\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              style={{ background: \"#7bed9f\" }}\r\n              onChange={this.changeInputState}\r\n              name=\"correctOp\"\r\n              value={this.state.correctOp}\r\n              id=\"outlined-basic\"\r\n              label=\"Correct Option\"\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              name=\"op1\"\r\n              value={this.state.op1}\r\n              onChange={this.changeInputState}\r\n              id=\"standard-basic\"\r\n              label=\"Option 1\"\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              name=\"op2\"\r\n              value={this.state.op2}\r\n              onChange={this.changeInputState}\r\n              id=\"standard-basic\"\r\n              label=\"Option 2\"\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              name=\"op3\"\r\n              value={this.state.op3}\r\n              onChange={this.changeInputState}\r\n              id=\"standard-basic\"\r\n              label=\"Option 3\"\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(QuizCreate);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { db } from \"../../Util/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: \"500px\",\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n  },\r\n  heading: {\r\n    background: \"#6c5ce7\",\r\n    color: \"white\",\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"30px\",\r\n    fontWeight: \"900\",\r\n    border: \"2px solid #6c5ce7\",\r\n    height: \"40px\",\r\n    letterSpacing: \"2px\",\r\n  },\r\n  table: {\r\n    border: \"2px solid #6c5ce7\",\r\n  },\r\n  item: {\r\n    justifyContent: \"space-between\",\r\n    padding: 5,\r\n  },\r\n  button: {\r\n    height: \"30px\",\r\n    background: \"#0984e3\",\r\n  },\r\n  buttonJoined: {\r\n    background: \"#00b894\",\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  courseName: {\r\n    fontFamily: \"Raleway\",\r\n    fontWeight: \"600\",\r\n  },\r\n}));\r\n\r\nvar CoursesTable = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={`${classes.heading} flex`}>{props.heading}</div>\r\n      <div className={classes.table}>\r\n        {props.joinedCourses &&\r\n          props.joinedCourses.map((item) => (\r\n            <ItemJoined key={uuid()} courseName={item} />\r\n          ))}\r\n        {props.recommendedCourses &&\r\n          props.recommendedCourses.map((item) => (\r\n            <ItemRecommended\r\n              key={uuid()}\r\n              user={props.user}\r\n              fetchCourses={props.fetchCourses}\r\n              courseName={item}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nvar ItemJoined = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={`${classes.item} flex`}>\r\n      <span className={classes.courseName}>{props.courseName}</span>\r\n      <Link to={`/AllQuizes/${props.courseName}`}>\r\n        <Button\r\n          className={`${classes.button} ${classes.buttonJoined}`}\r\n          variant=\"contained\"\r\n        >\r\n          Open\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nvar ItemRecommended = (props) => {\r\n  const classes = useStyles();\r\n  let onClick = async () => {\r\n    console.log(props);\r\n    let { courses } = props.user;\r\n    courses.push(props.courseName);\r\n    console.log(courses);\r\n    let obj = props.user;\r\n    obj.courses = courses;\r\n    await db.collection(\"users\").doc(props.user.docId).set(obj);\r\n    props.fetchCourses();\r\n  };\r\n  return (\r\n    <div className={`${classes.item} flex`}>\r\n      <span className={classes.courseName}>{props.courseName}</span>\r\n      <Button\r\n        onClick={onClick}\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Join\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoursesTable;\r\n","import React, { Component } from \"react\";\r\nimport CoursesTable from \"../CoursesTable/CoursesTable\";\r\nimport firebase, { auth } from \"../../Util/firebase\";\r\n\r\nclass Courses extends Component {\r\n  state = {\r\n    joinedCourses: [],\r\n    recommendedCourses: [],\r\n    courses: [],\r\n  };\r\n\r\n  componentDidUpdate = (preProp, preState) => {\r\n    console.log(\"Update\");\r\n    if (preProp.user !== this.props.user) this.fetchCourses();\r\n  };\r\n\r\n  getUserCourses = () => {\r\n    try {\r\n      let recommendedCourses = [];\r\n      this.state.courses.filter((item) => {\r\n        if (\r\n          !this.state.joinedCourses.some((element) => {\r\n            if (element === item) return true;\r\n          })\r\n        ) {\r\n          recommendedCourses.push(item);\r\n        }\r\n      });\r\n      this.setState({\r\n        recommendedCourses,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  fetchCourses = async () => {\r\n    let courses = [];\r\n    let query = await firebase.firestore().collection(\"courses\").get();\r\n    query.forEach((doc) => {\r\n      courses.push(doc.data().courseName);\r\n    });\r\n    this.setState(\r\n      {\r\n        courses,\r\n        joinedCourses: this.props.user.courses,\r\n      },\r\n      this.getUserCourses\r\n    );\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    console.log(auth.currentUser);\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    console.log(\"Mounted\");\r\n    this.fetchCourses();\r\n    // this.fetchCourses();\r\n    // let query = await db.collection(\"users\").where(\"uid\",\"===\",auth.currentUser.uid).get();\r\n    // query.forEach(item=>{\r\n    //     console.log(item.data());\r\n    // })\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"flex\"\r\n        style={{\r\n          flexFlow: \"column\",\r\n          padding: 50,\r\n          height: \"100%\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        <CoursesTable\r\n          joinedCourses={this.state.joinedCourses}\r\n          heading=\"JOINED COURSES\"\r\n        />\r\n        <CoursesTable\r\n          recommendedCourses={this.state.recommendedCourses}\r\n          user={this.props.user}\r\n          fetchCourses={this.fetchCourses}\r\n          heading=\"RECOMMENDED COURSES\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Courses;\r\n","import React, { Component } from \"react\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport SignUp from \"./Components/SignUp/SignUp\";\r\nimport QuizCreate from \"./Components/QuizCreate/QuizCreate\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport \"./Components/fonts.css\";\r\nimport \"./global.css\";\r\nimport Courses from \"./Components/Courses/Courses\";\r\nimport Quiz from \"./Components/Quiz/Quiz\";\r\n\r\nimport firebase , {db} from \"./Util/firebase\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    user: false,\r\n    login: true,\r\n    signUp: false,\r\n    username: \"\",\r\n    quizCreate: false,\r\n    uid: \"\",\r\n  };\r\n\r\n  turnFalse = (name) => {\r\n    this.setState({\r\n      [name]: false,\r\n    });\r\n  };\r\n\r\n  turnTrue = (name) => {\r\n    this.setState({\r\n      [name]: true,\r\n    });\r\n  };\r\n\r\n  // changeState = (username) => {\r\n  //   if (this.state.user)\r\n  //     this.setState(\r\n  //       {\r\n  //         user: false,\r\n  //       },\r\n  //       () => {\r\n  //         this.setState({\r\n  //           username: \"\",\r\n  //           signUp: false,\r\n  //           login: true,\r\n  //           quizCreate: false,\r\n  //         });\r\n  //       }\r\n  //     );\r\n  //   else\r\n  //     this.setState(\r\n  //       {\r\n  //         user: true,\r\n  //       },\r\n  //       () => {\r\n  //         this.setState({\r\n  //           username: username,\r\n  //         });\r\n  //       }\r\n  //     );\r\n  // };\r\n  fetchUser = async () => {\r\n    let user;\r\n    let query = await db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", this.state.uid)\r\n      .get();\r\n    query.forEach((doc) => {\r\n      user = doc.data();\r\n      user.docId = doc.id;\r\n    });\r\n    this.setState({\r\n      user: user,\r\n    })\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { history } = this.props;\r\n    firebase.auth().onAuthStateChanged((user)=> {\r\n      const currentPath = history.location.pathname.substring(1);\r\n      if (user) {\r\n        // User is signed in.\r\n        this.setState({\r\n          uid: user.uid,\r\n          user,\r\n        },()=>{\r\n          console.log(this.state)\r\n          this.fetchUser();\r\n        })\r\n        if (currentPath === \"Signup\" || currentPath === \"Login\")\r\n          history.push(\"/Dashboard\");\r\n      } else {\r\n        if (currentPath !== \"Signup\" || currentPath !== \"Login\")\r\n          history.push(\"/Login\");\r\n        this.setState({\r\n          user: null,\r\n          uid: null,\r\n        })\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateRows: \"64px 1fr\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        <Navbar\r\n          changeState={() => {\r\n            this.changeState();\r\n          }}\r\n          user= {this.state.user}\r\n          username={this.state.username}\r\n          turnTrue={this.turnTrue}\r\n          turnFalse={this.turnFalse}\r\n          login={this.login}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            render={(props) => {\r\n              this.state.username\r\n                ? props.history.push(\"Dashboard\")\r\n                : props.history.push(\"Login\");\r\n            }}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/Login\"\r\n            render={(props) => (\r\n              <Login {...props} changeState={this.changeState} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/Signup\"\r\n            render={(props) => (\r\n              <SignUp {...props} changeState={this.changeState} />\r\n            )}\r\n          />\r\n          <Route path=\"/Quizcreate\" component={QuizCreate} />\r\n          <Route\r\n            path=\"/Dashboard\"\r\n            // component={Courses}\r\n            render = {(props)=><Courses {...props} user = {this.state.user}/>}\r\n            // render={(props) => (\r\n            //   <Dashboard {...props} username={this.state.username} />\r\n            // )}\r\n          />\r\n          <Route\r\n            path=\"/AllQuizes/:courseName\"\r\n            render={(props) => (\r\n              <Dashboard {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/Quizes/:quizid\"\r\n            render={(props) => (\r\n              <Quiz {...props} uid = {this.state.uid}/>\r\n            )}\r\n          />\r\n        </Switch>\r\n        {/* <Navbar\r\n          changeState={this.changeState}\r\n          username={this.state.username}\r\n          turnTrue = {this.turnTrue} \r\n          turnFalse = {this.turnFalse}\r\n          login = {this.login}\r\n        /> */}\r\n        {this.state.user && this.state.quizCreate && (\r\n          <QuizCreate\r\n            dashboard={() => {\r\n              this.turnFalse(\"quizCreate\");\r\n            }}\r\n            username={this.state.username}\r\n          />\r\n        )}\r\n        {/* <Appbar />\r\n        <Home /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={window.location.pathname}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}